/**data objectimage:Stringtext:String */package {	import pdh.util.XMLLoader;	import flash.events.Event;	import flash.events.EventDispatcher;	public class ExhibitionData extends EventDispatcher	{		public static const LOADING : String = "app loading";		public static const LOADED : String = "app load";		private var xml_data : XMLLoader;				public var rowdata :Vector.<ExhibitionObject>;		function ExhibitionData(xmlfile : String)		{			xml_data = new XMLLoader(xmlfile);			xml_data.addEventListener(XMLLoader.LOADED, handleLoaded);		}		private function handleLoaded(e : Event):void		{			trace("[ThemeData] theme loaded! ");						// root node for excel spreadsheets			var rootdata:XMLList = xml_data.xml.body.table[0].table_row;//xml_data.xml.Worksheet.Table.Row						rowdata = parseRowData(rootdata);						dispatchEvent(new Event(LOADED));		}				private function parseRowData(val : XMLList) :  Vector.<ExhibitionObject> 		{			trace("parsing " + val.length() + " entries");						var arr :Vector.<ExhibitionObject> = new Vector.<ExhibitionObject>();			// skip row 1, that is the headers			for (var i : int = 1;i < val.length(); i++) {				var rootNode:XMLList = val[i].table_cell;								var obj : ExhibitionObject = new ExhibitionObject();								obj.types = rootNode[0].p.toString();				obj.id = rootNode[1].p.toString();				obj.filename = rootNode[2].p.toString();				obj.title = rootNode[3].p.toString();				obj.date = rootNode[4].p.toString();				obj.description = rootNode[5].p.toString();				obj.transcript = rootNode[6].p.toString();				obj.asset_details = rootNode[7].p.toString();				obj.exhibitions = rootNode[8].p.toString();								arr.push(obj);			}			return arr;		}					} // end class}// end package