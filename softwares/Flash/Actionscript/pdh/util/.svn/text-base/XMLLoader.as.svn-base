package pdh.util{	/**			Example:					var xml_data:XmlLoader;			xml_data = new XMLLoader(xmlfile);			xml_data.addEventListener(XMLLoader.LOADED, handleLoaded);				function handleLoaded(e:Event)			{				trace("this is my root node: " + xml_data.xml);				}				*/	import flash.events.IOErrorEvent;	import flash.net.URLLoader;	import flash.net.navigateToURL;	import flash.net.URLRequest;		import flash.events.Event;			import flash.events.EventDispatcher;	import flash.events.HTTPStatusEvent;		public class XMLLoader extends EventDispatcher{						public static const LOADED		:String = "loaded";				private var xml_data			:XML;				function XMLLoader(xmlfile:String)		{			trace("[XMLLoader] loading: " + xmlfile);						var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, handleLoaded); 			loader.addEventListener(IOErrorEvent.IO_ERROR, catchIOError);			loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, handleHttpError)			loader.load(new URLRequest(xmlfile));		}							private function catchIOError(e:IOErrorEvent){			removeListeners(e.target as URLLoader);			trace("Error caught: " + e.type);		}					private function handleHttpError(e:flash.events.HTTPStatusEvent){			//removeListeners(e.target as URLLoader);			trace("Http Error caught: " + e.type);		}						private function handleLoaded(e:Event):void		{			removeListeners(e.target as URLLoader); 						xml_data = new XML(e.target.data);			xml_data.ignoreWhite = true;									dispatchEvent(new Event(LOADED));					}				private function removeListeners(target:URLLoader):void 		{			target.removeEventListener(Event.COMPLETE, handleLoaded)    			target.removeEventListener(IOErrorEvent.IO_ERROR, catchIOError)  			target.addEventListener(flash.events.HTTPStatusEvent.HTTP_STATUS, handleHttpError)		}				public function get data():XML		{			return xml_data;		}				public function get xml():XML		{			return xml_data;		}						} // end class			} // end package