package pdh.util{	import flash.events.IOErrorEvent;	import flash.net.URLRequest;		import flash.display.Loader;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.ProgressEvent;	import pdh.ui.UIObject;	import flash.display.Bitmap;	import pdh.events.ExternalLoaderEvent;		public class ExternalLoader extends UIObject	{		private var ldr				:Loader;		public var isLoaded			:Boolean = false;						function ExternalLoader(file:String ="")		{			if (file != "") load(file);		}							public function load(file:String){			trace("[PhotoViewer] loading " + file)						if (ldr != null){				clear()			}						isLoaded = false;			ldr = new Loader();				ldr.contentLoaderInfo.addEventListener(Event.COMPLETE, loaded, false, 0, true) 			ldr.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, loading, false, 0, true) 			ldr.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError, false, 0, true) 			addChild(ldr);						var urlReq:URLRequest = new URLRequest(file);			ldr.load(urlReq);		}				private function loaded(e:Event):void 		{			isLoaded = true;			ldr.contentLoaderInfo.removeEventListener(Event.COMPLETE, loaded);			ldr.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, loading);			ldr.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError);  			dispatchEvent(new ExternalLoaderEvent(ExternalLoaderEvent.LOADED));		}				private function onIOError(e:IOErrorEvent):void 		{			// do something		}				private function loading(e:ProgressEvent):void 		{			var pcent:Number = e.bytesLoaded / e.bytesTotal;				dispatchEvent(new ExternalLoaderEvent(ExternalLoaderEvent.LOADING, {value:pcent}));		}										public function getContent():*		{			return ldr.content;		}						public override function destroy():void		{			clear();		}								public function clear():void 		{			if (ldr != null){				ldr.contentLoaderInfo.removeEventListener(Event.COMPLETE, loaded);				ldr.contentLoaderInfo.removeEventListener(ProgressEvent.PROGRESS, loading);				try{					ldr.close();				} catch(err){};				ldr = null;			}			while(numChildren > 0){				removeChildAt(0);			}		}					}	}